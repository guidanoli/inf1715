"int" -> type
"a" : type -> parameter
parameter -> parameter_list
parameter_list -> opt_parameter_list
"int" -> type
: type -> opt_def_function_type
"a" -> var
var -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
0 -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
additive_exp == additive_exp -> equality_cond
equality_cond -> logical_and_cond
logical_and_cond -> logical_or_cond
logical_or_cond -> cond
0 -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
additive_exp -> conditional_exp
conditional_exp -> exp
exp -> opt_exp
return opt_exp ; -> statement
opt_statement_list statement -> opt_statement_list
opt_def_variable_list opt_statement_list -> block
"a" -> var
var -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
0 -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
additive_exp > additive_exp -> relational_cond
relational_cond -> equality_cond
equality_cond -> logical_and_cond
logical_and_cond -> logical_or_cond
logical_or_cond -> cond
1 -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
additive_exp -> conditional_exp
conditional_exp -> exp
exp -> opt_exp
return opt_exp ; -> statement
opt_statement_list statement -> opt_statement_list
opt_def_variable_list opt_statement_list -> block
1 -> primary_exp
primary_exp -> postfix_exp
postfix_exp -> new_exp
new_exp -> unary_exp
- unary_exp -> unary_exp
unary_exp -> multiplicative_exp
multiplicative_exp -> additive_exp
additive_exp -> conditional_exp
conditional_exp -> exp
exp -> opt_exp
return opt_exp ; -> statement
opt_statement_list statement -> opt_statement_list
opt_def_variable_list opt_statement_list -> block
else block -> opt_else_block
if cond block opt_else_block -> statement
opt_statement_list statement -> opt_statement_list
opt_def_variable_list opt_statement_list -> block
else block -> opt_else_block
if cond block opt_else_block -> statement
opt_statement_list statement -> opt_statement_list
opt_def_variable_list opt_statement_list -> block
function "norm" ( opt_parameter_list ) opt_def_function_type block -> def_function
def_function -> definition
opt_definition_list definition -> opt_definition_list
opt_definition_list -> program
