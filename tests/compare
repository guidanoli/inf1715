#!/bin/bash

# Compares input and output test cases
#
# Usage: compare [tc1 [tc2 ...] ] (0)
#        compare {tc1..tcn}       (1)
#
# (0) List of test cases
# (1) Range of test cases

# Get script directory
sd=$(dirname -- "$(readlink -f -- "$BASH_SOURCE")")

# Get repository root
root=$(realpath $sd/..)

# candidatesdir is the directory where all the
# with all test case candidates generated by gen
candidatesdir=$root/bin/candidates

# Go to test cases directory
pushd $sd/cases > /dev/null

# Initialize fail counter to 0
failcnt=0

# Colours for printing
YELLOW='\033[0;33m'
NOCOLOR='\033[0m'

# For every test case...
for i in $@; do
	if [[ -f "output/$i" ]] ; then
		# Check if there an output...
		$($sd/func EDIT "\"input/$i\"" "\"output/$i\"")
	elif [[ -f "$candidatesdir/$i" ]] ; then
		# ...or a candidate...
		$($sd/func EDIT "\"input/$i\"" "\"$candidatesdir/$i\"")
		# Ask if candidate should be approved...
		printf $YELLOW"Should candidate #$i be approved (y/n)? "$NOCOLOR
		read yn
		case $yn in
			[Yy]* ) cp $candidatesdir/$i output;;
			[Nn]* ) exit;;
			* ) echo "Invalid input. Assumed 'n'."
		esac
	else
		# ...if not, print an error message...
		echo "Could not find output for test #$i..."
		# ...and increase the fail counter.
		((++failcnt))
	fi
done

# Exit test cases directory
popd > /dev/null

# Exit with the fail count
exit $failcnt
